// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ChangeGovernance extends ethereum.Event {
  get params(): ChangeGovernance__Params {
    return new ChangeGovernance__Params(this);
  }
}

export class ChangeGovernance__Params {
  _event: ChangeGovernance;

  constructor(event: ChangeGovernance) {
    this._event = event;
  }

  get _governance(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class DisableVault extends ethereum.Event {
  get params(): DisableVault__Params {
    return new DisableVault__Params(this);
  }
}

export class DisableVault__Params {
  _event: DisableVault;

  constructor(event: DisableVault) {
    this._event = event;
  }

  get _vault(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class EnableVault extends ethereum.Event {
  get params(): EnableVault__Params {
    return new EnableVault__Params(this);
  }
}

export class EnableVault__Params {
  _event: EnableVault;

  constructor(event: EnableVault) {
    this._event = event;
  }

  get _vault(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class NewVault extends ethereum.Event {
  get params(): NewVault__Params {
    return new NewVault__Params(this);
  }
}

export class NewVault__Params {
  _event: NewVault;

  constructor(event: NewVault) {
    this._event = event;
  }

  get _vault(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _index(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Factory extends ethereum.SmartContract {
  static bind(address: Address): Factory {
    return new Factory("Factory", address);
  }

  allowed(param0: Address): boolean {
    let result = super.call("allowed", "allowed(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try_allowed(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("allowed", "allowed(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  createVault(
    _uToken: Address,
    _governance: Address,
    _pair: Address,
    _stablecoin: Address,
    _feeds: Array<Address>,
    _maxPercentDiff: BigInt,
    _allowedDelay: BigInt,
    _staking: Address
  ): Address {
    let result = super.call(
      "createVault",
      "createVault(address,address,address,address,address[],uint256,uint256,address):(address)",
      [
        ethereum.Value.fromAddress(_uToken),
        ethereum.Value.fromAddress(_governance),
        ethereum.Value.fromAddress(_pair),
        ethereum.Value.fromAddress(_stablecoin),
        ethereum.Value.fromAddressArray(_feeds),
        ethereum.Value.fromUnsignedBigInt(_maxPercentDiff),
        ethereum.Value.fromUnsignedBigInt(_allowedDelay),
        ethereum.Value.fromAddress(_staking)
      ]
    );

    return result[0].toAddress();
  }

  try_createVault(
    _uToken: Address,
    _governance: Address,
    _pair: Address,
    _stablecoin: Address,
    _feeds: Array<Address>,
    _maxPercentDiff: BigInt,
    _allowedDelay: BigInt,
    _staking: Address
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createVault",
      "createVault(address,address,address,address,address[],uint256,uint256,address):(address)",
      [
        ethereum.Value.fromAddress(_uToken),
        ethereum.Value.fromAddress(_governance),
        ethereum.Value.fromAddress(_pair),
        ethereum.Value.fromAddress(_stablecoin),
        ethereum.Value.fromAddressArray(_feeds),
        ethereum.Value.fromUnsignedBigInt(_maxPercentDiff),
        ethereum.Value.fromUnsignedBigInt(_allowedDelay),
        ethereum.Value.fromAddress(_staking)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  governance(): Address {
    let result = super.call("governance", "governance():(address)", []);

    return result[0].toAddress();
  }

  try_governance(): ethereum.CallResult<Address> {
    let result = super.tryCall("governance", "governance():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  index(): BigInt {
    let result = super.call("index", "index():(uint256)", []);

    return result[0].toBigInt();
  }

  try_index(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("index", "index():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  pendingGovernance(): Address {
    let result = super.call(
      "pendingGovernance",
      "pendingGovernance():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_pendingGovernance(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "pendingGovernance",
      "pendingGovernance():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  uniswapFactory(): Address {
    let result = super.call("uniswapFactory", "uniswapFactory():(address)", []);

    return result[0].toAddress();
  }

  try_uniswapFactory(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "uniswapFactory",
      "uniswapFactory():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  vaultByIndex(param0: BigInt): Address {
    let result = super.call("vaultByIndex", "vaultByIndex(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_vaultByIndex(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "vaultByIndex",
      "vaultByIndex(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  vaults(param0: Address): boolean {
    let result = super.call("vaults", "vaults(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try_vaults(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("vaults", "vaults(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _governance(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _factory(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AcceptGovernanceCall extends ethereum.Call {
  get inputs(): AcceptGovernanceCall__Inputs {
    return new AcceptGovernanceCall__Inputs(this);
  }

  get outputs(): AcceptGovernanceCall__Outputs {
    return new AcceptGovernanceCall__Outputs(this);
  }
}

export class AcceptGovernanceCall__Inputs {
  _call: AcceptGovernanceCall;

  constructor(call: AcceptGovernanceCall) {
    this._call = call;
  }
}

export class AcceptGovernanceCall__Outputs {
  _call: AcceptGovernanceCall;

  constructor(call: AcceptGovernanceCall) {
    this._call = call;
  }
}

export class ChangeGovernanceCall extends ethereum.Call {
  get inputs(): ChangeGovernanceCall__Inputs {
    return new ChangeGovernanceCall__Inputs(this);
  }

  get outputs(): ChangeGovernanceCall__Outputs {
    return new ChangeGovernanceCall__Outputs(this);
  }
}

export class ChangeGovernanceCall__Inputs {
  _call: ChangeGovernanceCall;

  constructor(call: ChangeGovernanceCall) {
    this._call = call;
  }

  get _governance(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeGovernanceCall__Outputs {
  _call: ChangeGovernanceCall;

  constructor(call: ChangeGovernanceCall) {
    this._call = call;
  }
}

export class CreateVaultCall extends ethereum.Call {
  get inputs(): CreateVaultCall__Inputs {
    return new CreateVaultCall__Inputs(this);
  }

  get outputs(): CreateVaultCall__Outputs {
    return new CreateVaultCall__Outputs(this);
  }
}

export class CreateVaultCall__Inputs {
  _call: CreateVaultCall;

  constructor(call: CreateVaultCall) {
    this._call = call;
  }

  get _uToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _governance(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _pair(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _stablecoin(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _feeds(): Array<Address> {
    return this._call.inputValues[4].value.toAddressArray();
  }

  get _maxPercentDiff(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _allowedDelay(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get _staking(): Address {
    return this._call.inputValues[7].value.toAddress();
  }
}

export class CreateVaultCall__Outputs {
  _call: CreateVaultCall;

  constructor(call: CreateVaultCall) {
    this._call = call;
  }

  get vault(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class DisableVaultCall extends ethereum.Call {
  get inputs(): DisableVaultCall__Inputs {
    return new DisableVaultCall__Inputs(this);
  }

  get outputs(): DisableVaultCall__Outputs {
    return new DisableVaultCall__Outputs(this);
  }
}

export class DisableVaultCall__Inputs {
  _call: DisableVaultCall;

  constructor(call: DisableVaultCall) {
    this._call = call;
  }

  get _vault(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class DisableVaultCall__Outputs {
  _call: DisableVaultCall;

  constructor(call: DisableVaultCall) {
    this._call = call;
  }
}

export class EnableVaultCall extends ethereum.Call {
  get inputs(): EnableVaultCall__Inputs {
    return new EnableVaultCall__Inputs(this);
  }

  get outputs(): EnableVaultCall__Outputs {
    return new EnableVaultCall__Outputs(this);
  }
}

export class EnableVaultCall__Inputs {
  _call: EnableVaultCall;

  constructor(call: EnableVaultCall) {
    this._call = call;
  }

  get _vault(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class EnableVaultCall__Outputs {
  _call: EnableVaultCall;

  constructor(call: EnableVaultCall) {
    this._call = call;
  }
}

export class SetPauseCall extends ethereum.Call {
  get inputs(): SetPauseCall__Inputs {
    return new SetPauseCall__Inputs(this);
  }

  get outputs(): SetPauseCall__Outputs {
    return new SetPauseCall__Outputs(this);
  }
}

export class SetPauseCall__Inputs {
  _call: SetPauseCall;

  constructor(call: SetPauseCall) {
    this._call = call;
  }
}

export class SetPauseCall__Outputs {
  _call: SetPauseCall;

  constructor(call: SetPauseCall) {
    this._call = call;
  }
}

export class SetUnpauseCall extends ethereum.Call {
  get inputs(): SetUnpauseCall__Inputs {
    return new SetUnpauseCall__Inputs(this);
  }

  get outputs(): SetUnpauseCall__Outputs {
    return new SetUnpauseCall__Outputs(this);
  }
}

export class SetUnpauseCall__Inputs {
  _call: SetUnpauseCall;

  constructor(call: SetUnpauseCall) {
    this._call = call;
  }
}

export class SetUnpauseCall__Outputs {
  _call: SetUnpauseCall;

  constructor(call: SetUnpauseCall) {
    this._call = call;
  }
}
