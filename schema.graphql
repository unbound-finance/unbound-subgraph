type User @entity {
  "User Address"
  id: ID!
  loans: [Loan!]!
  transactions: [Transaction!]!
}

type Loan @entity {
  "Unbound Token Address"
  id: ID!
  loaned: BigDecimal!
}

enum TransactionType {
  Mint
  Burn
}

type Transaction @entity {
  id: ID!
  uTokenAmount: BigDecimal!
  type: TransactionType!
  blockTime: BigInt!
  uTokenAddress: String!
  user: User!
}

# type Mint @entity {
#   id: ID!
#   amount: BigDecimal!
#   blockTime: BigInt!
#   uTokenAddress: String!
#   user: User!
# }

# type Burn @entity {
#   id: ID!
#   amount: BigDecimal!
#   blockTime: BigInt!
#   uTokenAddress: String!
#   user: User!
# }

# type LockLPT @entity {
#   id: ID!
#   poolTokeAmount: BigInt!
#   uTokenAddress: String!
#   user: User!
# }

# type UnlockLPT @entity {
#   id: ID!
#   poolTokeAmount: BigInt!
#   uTokenAddress: String!
#   user: User!
# }

type DailyLLC @entity {
  id: ID!
  date: Int!
  uTokenAddress: String!
  mintCount: BigInt!
  burnCount: BigInt!
  mintUnboundToken: BigDecimal!
  burnUnboundToken: BigDecimal!
  lockPoolToken: BigDecimal!
  unlockPoolToken: BigDecimal!
  # lockUSD: BigDecimal!
  # unlockUSD: BigDecimal!
}

type Daily @entity {
  id: ID!
  date: Int!
  mintCount: BigInt!
  burnCount: BigInt!
  mintUnboundToken: BigDecimal!
  burnUnboundToken: BigDecimal!
  lockPoolToken: BigDecimal!
  unlockPoolToken: BigDecimal!
}

type All @entity {
  id: ID!
  mintCount: BigInt!
  burnCount: BigInt!
  mintUnboundToken: BigDecimal!
  burnUnboundToken: BigDecimal!
  lockPoolToken: BigDecimal!
  unlockPoolToken: BigDecimal!
}
