// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ChangeCR extends ethereum.Event {
  get params(): ChangeCR__Params {
    return new ChangeCR__Params(this);
  }
}

export class ChangeCR__Params {
  _event: ChangeCR;

  constructor(event: ChangeCR) {
    this._event = event;
  }

  get _CR(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ChangeGovernance extends ethereum.Event {
  get params(): ChangeGovernance__Params {
    return new ChangeGovernance__Params(this);
  }
}

export class ChangeGovernance__Params {
  _event: ChangeGovernance;

  constructor(event: ChangeGovernance) {
    this._event = event;
  }

  get _governance(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ChangeLTV extends ethereum.Event {
  get params(): ChangeLTV__Params {
    return new ChangeLTV__Params(this);
  }
}

export class ChangeLTV__Params {
  _event: ChangeLTV;

  constructor(event: ChangeLTV) {
    this._event = event;
  }

  get _LTV(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ChangeManager extends ethereum.Event {
  get params(): ChangeManager__Params {
    return new ChangeManager__Params(this);
  }
}

export class ChangeManager__Params {
  _event: ChangeManager;

  constructor(event: ChangeManager) {
    this._event = event;
  }

  get _manager(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ChangeProtocolFee extends ethereum.Event {
  get params(): ChangeProtocolFee__Params {
    return new ChangeProtocolFee__Params(this);
  }
}

export class ChangeProtocolFee__Params {
  _event: ChangeProtocolFee;

  constructor(event: ChangeProtocolFee) {
    this._event = event;
  }

  get _PROTOCOL_FEE(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ChangeSafu extends ethereum.Event {
  get params(): ChangeSafu__Params {
    return new ChangeSafu__Params(this);
  }
}

export class ChangeSafu__Params {
  _event: ChangeSafu;

  constructor(event: ChangeSafu) {
    this._event = event;
  }

  get _safu(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ChangeSafuShare extends ethereum.Event {
  get params(): ChangeSafuShare__Params {
    return new ChangeSafuShare__Params(this);
  }
}

export class ChangeSafuShare__Params {
  _event: ChangeSafuShare;

  constructor(event: ChangeSafuShare) {
    this._event = event;
  }

  get _safuShare(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ChangeStakeFee extends ethereum.Event {
  get params(): ChangeStakeFee__Params {
    return new ChangeStakeFee__Params(this);
  }
}

export class ChangeStakeFee__Params {
  _event: ChangeStakeFee;

  constructor(event: ChangeStakeFee) {
    this._event = event;
  }

  get _fee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ChangeTeam extends ethereum.Event {
  get params(): ChangeTeam__Params {
    return new ChangeTeam__Params(this);
  }
}

export class ChangeTeam__Params {
  _event: ChangeTeam;

  constructor(event: ChangeTeam) {
    this._event = event;
  }

  get _team(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ChangeUTokenMintLimit extends ethereum.Event {
  get params(): ChangeUTokenMintLimit__Params {
    return new ChangeUTokenMintLimit__Params(this);
  }
}

export class ChangeUTokenMintLimit__Params {
  _event: ChangeUTokenMintLimit;

  constructor(event: ChangeUTokenMintLimit) {
    this._event = event;
  }

  get _uTokenMintLimit(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ClaimTokens extends ethereum.Event {
  get params(): ClaimTokens__Params {
    return new ClaimTokens__Params(this);
  }
}

export class ClaimTokens__Params {
  _event: ClaimTokens;

  constructor(event: ClaimTokens) {
    this._event = event;
  }

  get _token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class DisableYieldFactory extends ethereum.Event {
  get params(): DisableYieldFactory__Params {
    return new DisableYieldFactory__Params(this);
  }
}

export class DisableYieldFactory__Params {
  _event: DisableYieldFactory;

  constructor(event: DisableYieldFactory) {
    this._event = event;
  }

  get _factory(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class EnableYieldFactory extends ethereum.Event {
  get params(): EnableYieldFactory__Params {
    return new EnableYieldFactory__Params(this);
  }
}

export class EnableYieldFactory__Params {
  _event: EnableYieldFactory;

  constructor(event: EnableYieldFactory) {
    this._event = event;
  }

  get _factory(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Lock extends ethereum.Event {
  get params(): Lock__Params {
    return new Lock__Params(this);
  }
}

export class Lock__Params {
  _event: Lock;

  constructor(event: Lock) {
    this._event = event;
  }

  get _user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _collateral(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _uTokenAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Unlock extends ethereum.Event {
  get params(): Unlock__Params {
    return new Unlock__Params(this);
  }
}

export class Unlock__Params {
  _event: Unlock;

  constructor(event: Unlock) {
    this._event = event;
  }

  get _user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _collateral(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _uTokenAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Vault extends ethereum.SmartContract {
  static bind(address: Address): Vault {
    return new Vault("Vault", address);
  }

  CR(): BigInt {
    let result = super.call("CR", "CR():(uint256)", []);

    return result[0].toBigInt();
  }

  try_CR(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("CR", "CR():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  LTV(): BigInt {
    let result = super.call("LTV", "LTV():(uint256)", []);

    return result[0].toBigInt();
  }

  try_LTV(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("LTV", "LTV():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  PROTOCOL_FEE(): BigInt {
    let result = super.call("PROTOCOL_FEE", "PROTOCOL_FEE():(uint256)", []);

    return result[0].toBigInt();
  }

  try_PROTOCOL_FEE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("PROTOCOL_FEE", "PROTOCOL_FEE():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  allowedDelay(): BigInt {
    let result = super.call("allowedDelay", "allowedDelay():(uint256)", []);

    return result[0].toBigInt();
  }

  try_allowedDelay(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("allowedDelay", "allowedDelay():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  collateral(param0: Address): BigInt {
    let result = super.call("collateral", "collateral(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_collateral(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("collateral", "collateral(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  debt(param0: Address): BigInt {
    let result = super.call("debt", "debt(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_debt(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("debt", "debt(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  decimals(param0: BigInt): BigInt {
    let result = super.call("decimals", "decimals(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toBigInt();
  }

  try_decimals(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("decimals", "decimals(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  factory(): Address {
    let result = super.call("factory", "factory():(address)", []);

    return result[0].toAddress();
  }

  try_factory(): ethereum.CallResult<Address> {
    let result = super.tryCall("factory", "factory():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  feeds(param0: BigInt): Address {
    let result = super.call("feeds", "feeds(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_feeds(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("feeds", "feeds(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  governance(): Address {
    let result = super.call("governance", "governance():(address)", []);

    return result[0].toAddress();
  }

  try_governance(): ethereum.CallResult<Address> {
    let result = super.tryCall("governance", "governance():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isBase(param0: BigInt): boolean {
    let result = super.call("isBase", "isBase(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toBoolean();
  }

  try_isBase(param0: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("isBase", "isBase(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isValidYieldWalletFactory(param0: Address): boolean {
    let result = super.call(
      "isValidYieldWalletFactory",
      "isValidYieldWalletFactory(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBoolean();
  }

  try_isValidYieldWalletFactory(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isValidYieldWalletFactory",
      "isValidYieldWalletFactory(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  lock(
    _amount: BigInt,
    _mintTo: Address,
    _farming: Address,
    _minUTokenAmount: BigInt
  ): BigInt {
    let result = super.call(
      "lock",
      "lock(uint256,address,address,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromAddress(_mintTo),
        ethereum.Value.fromAddress(_farming),
        ethereum.Value.fromUnsignedBigInt(_minUTokenAmount)
      ]
    );

    return result[0].toBigInt();
  }

  try_lock(
    _amount: BigInt,
    _mintTo: Address,
    _farming: Address,
    _minUTokenAmount: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "lock",
      "lock(uint256,address,address,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromAddress(_mintTo),
        ethereum.Value.fromAddress(_farming),
        ethereum.Value.fromUnsignedBigInt(_minUTokenAmount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  lockWithPermit(
    _amount: BigInt,
    _mintTo: Address,
    _farming: Address,
    _minUTokenAmount: BigInt,
    _deadline: BigInt,
    _v: i32,
    _r: Bytes,
    _s: Bytes
  ): BigInt {
    let result = super.call(
      "lockWithPermit",
      "lockWithPermit(uint256,address,address,uint256,uint256,uint8,bytes32,bytes32):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromAddress(_mintTo),
        ethereum.Value.fromAddress(_farming),
        ethereum.Value.fromUnsignedBigInt(_minUTokenAmount),
        ethereum.Value.fromUnsignedBigInt(_deadline),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_v)),
        ethereum.Value.fromFixedBytes(_r),
        ethereum.Value.fromFixedBytes(_s)
      ]
    );

    return result[0].toBigInt();
  }

  try_lockWithPermit(
    _amount: BigInt,
    _mintTo: Address,
    _farming: Address,
    _minUTokenAmount: BigInt,
    _deadline: BigInt,
    _v: i32,
    _r: Bytes,
    _s: Bytes
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "lockWithPermit",
      "lockWithPermit(uint256,address,address,uint256,uint256,uint8,bytes32,bytes32):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromAddress(_mintTo),
        ethereum.Value.fromAddress(_farming),
        ethereum.Value.fromUnsignedBigInt(_minUTokenAmount),
        ethereum.Value.fromUnsignedBigInt(_deadline),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_v)),
        ethereum.Value.fromFixedBytes(_r),
        ethereum.Value.fromFixedBytes(_s)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  manager(): Address {
    let result = super.call("manager", "manager():(address)", []);

    return result[0].toAddress();
  }

  try_manager(): ethereum.CallResult<Address> {
    let result = super.tryCall("manager", "manager():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  maxPercentDiff(): BigInt {
    let result = super.call("maxPercentDiff", "maxPercentDiff():(uint256)", []);

    return result[0].toBigInt();
  }

  try_maxPercentDiff(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maxPercentDiff",
      "maxPercentDiff():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  pair(): Address {
    let result = super.call("pair", "pair():(address)", []);

    return result[0].toAddress();
  }

  try_pair(): ethereum.CallResult<Address> {
    let result = super.tryCall("pair", "pair():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  pendingGovernance(): Address {
    let result = super.call(
      "pendingGovernance",
      "pendingGovernance():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_pendingGovernance(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "pendingGovernance",
      "pendingGovernance():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  safu(): Address {
    let result = super.call("safu", "safu():(address)", []);

    return result[0].toAddress();
  }

  try_safu(): ethereum.CallResult<Address> {
    let result = super.tryCall("safu", "safu():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  safuShare(): BigInt {
    let result = super.call("safuShare", "safuShare():(uint256)", []);

    return result[0].toBigInt();
  }

  try_safuShare(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("safuShare", "safuShare():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  stakeFee(): BigInt {
    let result = super.call("stakeFee", "stakeFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_stakeFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("stakeFee", "stakeFee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  staking(): Address {
    let result = super.call("staking", "staking():(address)", []);

    return result[0].toAddress();
  }

  try_staking(): ethereum.CallResult<Address> {
    let result = super.tryCall("staking", "staking():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  team(): Address {
    let result = super.call("team", "team():(address)", []);

    return result[0].toAddress();
  }

  try_team(): ethereum.CallResult<Address> {
    let result = super.tryCall("team", "team():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  uToken(): Address {
    let result = super.call("uToken", "uToken():(address)", []);

    return result[0].toAddress();
  }

  try_uToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("uToken", "uToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  uTokenMintLimit(): BigInt {
    let result = super.call(
      "uTokenMintLimit",
      "uTokenMintLimit():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_uTokenMintLimit(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "uTokenMintLimit",
      "uTokenMintLimit():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  uTokenMinted(): BigInt {
    let result = super.call("uTokenMinted", "uTokenMinted():(uint256)", []);

    return result[0].toBigInt();
  }

  try_uTokenMinted(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("uTokenMinted", "uTokenMinted():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  unlock(_uTokenAmount: BigInt, _minCollateral: BigInt): BigInt {
    let result = super.call("unlock", "unlock(uint256,uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_uTokenAmount),
      ethereum.Value.fromUnsignedBigInt(_minCollateral)
    ]);

    return result[0].toBigInt();
  }

  try_unlock(
    _uTokenAmount: BigInt,
    _minCollateral: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall("unlock", "unlock(uint256,uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_uTokenAmount),
      ethereum.Value.fromUnsignedBigInt(_minCollateral)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  yieldWallet(param0: Address): Address {
    let result = super.call("yieldWallet", "yieldWallet(address):(address)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toAddress();
  }

  try_yieldWallet(param0: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "yieldWallet",
      "yieldWallet(address):(address)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  yieldWalletDeposit(param0: Address): BigInt {
    let result = super.call(
      "yieldWalletDeposit",
      "yieldWalletDeposit(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_yieldWalletDeposit(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "yieldWalletDeposit",
      "yieldWalletDeposit(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _uToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _governance(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _pair(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _stablecoin(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _feeds(): Array<Address> {
    return this._call.inputValues[4].value.toAddressArray();
  }

  get _maxPercentDiff(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _allowedDelay(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get _staking(): Address {
    return this._call.inputValues[7].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AcceptGovernanceCall extends ethereum.Call {
  get inputs(): AcceptGovernanceCall__Inputs {
    return new AcceptGovernanceCall__Inputs(this);
  }

  get outputs(): AcceptGovernanceCall__Outputs {
    return new AcceptGovernanceCall__Outputs(this);
  }
}

export class AcceptGovernanceCall__Inputs {
  _call: AcceptGovernanceCall;

  constructor(call: AcceptGovernanceCall) {
    this._call = call;
  }
}

export class AcceptGovernanceCall__Outputs {
  _call: AcceptGovernanceCall;

  constructor(call: AcceptGovernanceCall) {
    this._call = call;
  }
}

export class ChangeCRCall extends ethereum.Call {
  get inputs(): ChangeCRCall__Inputs {
    return new ChangeCRCall__Inputs(this);
  }

  get outputs(): ChangeCRCall__Outputs {
    return new ChangeCRCall__Outputs(this);
  }
}

export class ChangeCRCall__Inputs {
  _call: ChangeCRCall;

  constructor(call: ChangeCRCall) {
    this._call = call;
  }

  get _CR(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ChangeCRCall__Outputs {
  _call: ChangeCRCall;

  constructor(call: ChangeCRCall) {
    this._call = call;
  }
}

export class ChangeFeeCall extends ethereum.Call {
  get inputs(): ChangeFeeCall__Inputs {
    return new ChangeFeeCall__Inputs(this);
  }

  get outputs(): ChangeFeeCall__Outputs {
    return new ChangeFeeCall__Outputs(this);
  }
}

export class ChangeFeeCall__Inputs {
  _call: ChangeFeeCall;

  constructor(call: ChangeFeeCall) {
    this._call = call;
  }

  get _fee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ChangeFeeCall__Outputs {
  _call: ChangeFeeCall;

  constructor(call: ChangeFeeCall) {
    this._call = call;
  }
}

export class ChangeGovernanceCall extends ethereum.Call {
  get inputs(): ChangeGovernanceCall__Inputs {
    return new ChangeGovernanceCall__Inputs(this);
  }

  get outputs(): ChangeGovernanceCall__Outputs {
    return new ChangeGovernanceCall__Outputs(this);
  }
}

export class ChangeGovernanceCall__Inputs {
  _call: ChangeGovernanceCall;

  constructor(call: ChangeGovernanceCall) {
    this._call = call;
  }

  get _governance(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeGovernanceCall__Outputs {
  _call: ChangeGovernanceCall;

  constructor(call: ChangeGovernanceCall) {
    this._call = call;
  }
}

export class ChangeLTVCall extends ethereum.Call {
  get inputs(): ChangeLTVCall__Inputs {
    return new ChangeLTVCall__Inputs(this);
  }

  get outputs(): ChangeLTVCall__Outputs {
    return new ChangeLTVCall__Outputs(this);
  }
}

export class ChangeLTVCall__Inputs {
  _call: ChangeLTVCall;

  constructor(call: ChangeLTVCall) {
    this._call = call;
  }

  get _LTV(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ChangeLTVCall__Outputs {
  _call: ChangeLTVCall;

  constructor(call: ChangeLTVCall) {
    this._call = call;
  }
}

export class ChangeManagerCall extends ethereum.Call {
  get inputs(): ChangeManagerCall__Inputs {
    return new ChangeManagerCall__Inputs(this);
  }

  get outputs(): ChangeManagerCall__Outputs {
    return new ChangeManagerCall__Outputs(this);
  }
}

export class ChangeManagerCall__Inputs {
  _call: ChangeManagerCall;

  constructor(call: ChangeManagerCall) {
    this._call = call;
  }

  get _manager(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeManagerCall__Outputs {
  _call: ChangeManagerCall;

  constructor(call: ChangeManagerCall) {
    this._call = call;
  }
}

export class ChangeSafuAddressCall extends ethereum.Call {
  get inputs(): ChangeSafuAddressCall__Inputs {
    return new ChangeSafuAddressCall__Inputs(this);
  }

  get outputs(): ChangeSafuAddressCall__Outputs {
    return new ChangeSafuAddressCall__Outputs(this);
  }
}

export class ChangeSafuAddressCall__Inputs {
  _call: ChangeSafuAddressCall;

  constructor(call: ChangeSafuAddressCall) {
    this._call = call;
  }

  get _safu(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeSafuAddressCall__Outputs {
  _call: ChangeSafuAddressCall;

  constructor(call: ChangeSafuAddressCall) {
    this._call = call;
  }
}

export class ChangeSafuShareCall extends ethereum.Call {
  get inputs(): ChangeSafuShareCall__Inputs {
    return new ChangeSafuShareCall__Inputs(this);
  }

  get outputs(): ChangeSafuShareCall__Outputs {
    return new ChangeSafuShareCall__Outputs(this);
  }
}

export class ChangeSafuShareCall__Inputs {
  _call: ChangeSafuShareCall;

  constructor(call: ChangeSafuShareCall) {
    this._call = call;
  }

  get _safuShare(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ChangeSafuShareCall__Outputs {
  _call: ChangeSafuShareCall;

  constructor(call: ChangeSafuShareCall) {
    this._call = call;
  }
}

export class ChangeStakeFeeCall extends ethereum.Call {
  get inputs(): ChangeStakeFeeCall__Inputs {
    return new ChangeStakeFeeCall__Inputs(this);
  }

  get outputs(): ChangeStakeFeeCall__Outputs {
    return new ChangeStakeFeeCall__Outputs(this);
  }
}

export class ChangeStakeFeeCall__Inputs {
  _call: ChangeStakeFeeCall;

  constructor(call: ChangeStakeFeeCall) {
    this._call = call;
  }

  get _stakeFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ChangeStakeFeeCall__Outputs {
  _call: ChangeStakeFeeCall;

  constructor(call: ChangeStakeFeeCall) {
    this._call = call;
  }
}

export class ChangeTeamFeeAddressCall extends ethereum.Call {
  get inputs(): ChangeTeamFeeAddressCall__Inputs {
    return new ChangeTeamFeeAddressCall__Inputs(this);
  }

  get outputs(): ChangeTeamFeeAddressCall__Outputs {
    return new ChangeTeamFeeAddressCall__Outputs(this);
  }
}

export class ChangeTeamFeeAddressCall__Inputs {
  _call: ChangeTeamFeeAddressCall;

  constructor(call: ChangeTeamFeeAddressCall) {
    this._call = call;
  }

  get _team(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeTeamFeeAddressCall__Outputs {
  _call: ChangeTeamFeeAddressCall;

  constructor(call: ChangeTeamFeeAddressCall) {
    this._call = call;
  }
}

export class ChangeUTokenMintLimitCall extends ethereum.Call {
  get inputs(): ChangeUTokenMintLimitCall__Inputs {
    return new ChangeUTokenMintLimitCall__Inputs(this);
  }

  get outputs(): ChangeUTokenMintLimitCall__Outputs {
    return new ChangeUTokenMintLimitCall__Outputs(this);
  }
}

export class ChangeUTokenMintLimitCall__Inputs {
  _call: ChangeUTokenMintLimitCall;

  constructor(call: ChangeUTokenMintLimitCall) {
    this._call = call;
  }

  get _uTokenMintLimit(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ChangeUTokenMintLimitCall__Outputs {
  _call: ChangeUTokenMintLimitCall;

  constructor(call: ChangeUTokenMintLimitCall) {
    this._call = call;
  }
}

export class ClaimCall extends ethereum.Call {
  get inputs(): ClaimCall__Inputs {
    return new ClaimCall__Inputs(this);
  }

  get outputs(): ClaimCall__Outputs {
    return new ClaimCall__Outputs(this);
  }
}

export class ClaimCall__Inputs {
  _call: ClaimCall;

  constructor(call: ClaimCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ClaimCall__Outputs {
  _call: ClaimCall;

  constructor(call: ClaimCall) {
    this._call = call;
  }
}

export class DisableYieldWalletFactoryCall extends ethereum.Call {
  get inputs(): DisableYieldWalletFactoryCall__Inputs {
    return new DisableYieldWalletFactoryCall__Inputs(this);
  }

  get outputs(): DisableYieldWalletFactoryCall__Outputs {
    return new DisableYieldWalletFactoryCall__Outputs(this);
  }
}

export class DisableYieldWalletFactoryCall__Inputs {
  _call: DisableYieldWalletFactoryCall;

  constructor(call: DisableYieldWalletFactoryCall) {
    this._call = call;
  }

  get _factory(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class DisableYieldWalletFactoryCall__Outputs {
  _call: DisableYieldWalletFactoryCall;

  constructor(call: DisableYieldWalletFactoryCall) {
    this._call = call;
  }
}

export class DistributeFeeCall extends ethereum.Call {
  get inputs(): DistributeFeeCall__Inputs {
    return new DistributeFeeCall__Inputs(this);
  }

  get outputs(): DistributeFeeCall__Outputs {
    return new DistributeFeeCall__Outputs(this);
  }
}

export class DistributeFeeCall__Inputs {
  _call: DistributeFeeCall;

  constructor(call: DistributeFeeCall) {
    this._call = call;
  }
}

export class DistributeFeeCall__Outputs {
  _call: DistributeFeeCall;

  constructor(call: DistributeFeeCall) {
    this._call = call;
  }
}

export class EmergencyUnlockCall extends ethereum.Call {
  get inputs(): EmergencyUnlockCall__Inputs {
    return new EmergencyUnlockCall__Inputs(this);
  }

  get outputs(): EmergencyUnlockCall__Outputs {
    return new EmergencyUnlockCall__Outputs(this);
  }
}

export class EmergencyUnlockCall__Inputs {
  _call: EmergencyUnlockCall;

  constructor(call: EmergencyUnlockCall) {
    this._call = call;
  }
}

export class EmergencyUnlockCall__Outputs {
  _call: EmergencyUnlockCall;

  constructor(call: EmergencyUnlockCall) {
    this._call = call;
  }
}

export class EnableYieldWalletFactoryCall extends ethereum.Call {
  get inputs(): EnableYieldWalletFactoryCall__Inputs {
    return new EnableYieldWalletFactoryCall__Inputs(this);
  }

  get outputs(): EnableYieldWalletFactoryCall__Outputs {
    return new EnableYieldWalletFactoryCall__Outputs(this);
  }
}

export class EnableYieldWalletFactoryCall__Inputs {
  _call: EnableYieldWalletFactoryCall;

  constructor(call: EnableYieldWalletFactoryCall) {
    this._call = call;
  }

  get _factory(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class EnableYieldWalletFactoryCall__Outputs {
  _call: EnableYieldWalletFactoryCall;

  constructor(call: EnableYieldWalletFactoryCall) {
    this._call = call;
  }
}

export class LockCall extends ethereum.Call {
  get inputs(): LockCall__Inputs {
    return new LockCall__Inputs(this);
  }

  get outputs(): LockCall__Outputs {
    return new LockCall__Outputs(this);
  }
}

export class LockCall__Inputs {
  _call: LockCall;

  constructor(call: LockCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _mintTo(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _farming(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _minUTokenAmount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class LockCall__Outputs {
  _call: LockCall;

  constructor(call: LockCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class LockWithPermitCall extends ethereum.Call {
  get inputs(): LockWithPermitCall__Inputs {
    return new LockWithPermitCall__Inputs(this);
  }

  get outputs(): LockWithPermitCall__Outputs {
    return new LockWithPermitCall__Outputs(this);
  }
}

export class LockWithPermitCall__Inputs {
  _call: LockWithPermitCall;

  constructor(call: LockWithPermitCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _mintTo(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _farming(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _minUTokenAmount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _deadline(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _v(): i32 {
    return this._call.inputValues[5].value.toI32();
  }

  get _r(): Bytes {
    return this._call.inputValues[6].value.toBytes();
  }

  get _s(): Bytes {
    return this._call.inputValues[7].value.toBytes();
  }
}

export class LockWithPermitCall__Outputs {
  _call: LockWithPermitCall;

  constructor(call: LockWithPermitCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class UnlockCall extends ethereum.Call {
  get inputs(): UnlockCall__Inputs {
    return new UnlockCall__Inputs(this);
  }

  get outputs(): UnlockCall__Outputs {
    return new UnlockCall__Outputs(this);
  }
}

export class UnlockCall__Inputs {
  _call: UnlockCall;

  constructor(call: UnlockCall) {
    this._call = call;
  }

  get _uTokenAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _minCollateral(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UnlockCall__Outputs {
  _call: UnlockCall;

  constructor(call: UnlockCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}
