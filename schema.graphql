type Factory @entity {
  # factory address
  id: ID!
  vaultCount: BigInt!
  txCount: BigInt!
}

type Vault @entity {
  # vault address
  id: ID!
  # vault's tx count
  txCount: BigInt!
  # tvl
  tvl: BigInt!
  # all time volume
  volume: BigInt!
  # vault day data
  vaultDayData: [VaultDayData!]! @derivedFrom(field: "vault")
  # derived fields
  mints: [Mint!]! @derivedFrom(field: "vault")
  burns: [Burn!]! @derivedFrom(field: "vault")
}

type Transaction @entity {
  # txn hash
  id: ID!
  # block txn was included in
  blockNumber: BigInt!
  # timestamp txn was confirmed
  timestamp: BigInt!
  # gas used during txn execution
  gasUsed: BigInt!
  gasPrice: BigInt!
  # derived values
  mints: [Mint]! @derivedFrom(field: "transaction")
  burns: [Burn]! @derivedFrom(field: "transaction")
}

type Mint @entity {
  # transaction hash + "#" + index in mints Transaction array
  id: ID!
  # which txn the mint was included in
  transaction: Transaction!
  # time of txn
  timestamp: BigInt!
  # vault position is within
  vault: Vault!
  # the address that minted the liquidity
  sender: Bytes
  # amount of liquidity minted
  amount: BigInt!
}

type Burn @entity {
  # transaction hash + "#" + index in mints Transaction array
  id: ID!
  # which txn the burn was included in
  transaction: Transaction!
  # time of txn
  timestamp: BigInt!
  # vault position is within
  vault: Vault!
  # the address that burned the liquidity
  sender: Bytes
  # amount of liquidity burned
  amount: BigInt!
}

# Data accumulated and condensed into day stats for each vault
type VaultDayData @entity {
  # timestamp rounded to current day by dividing by 86400
  id: ID!
  # timestamp rounded to current day by dividing by 86400
  date: Int!
  # pointer to vault
  vault: Vault!
  # tvl
  tvl: BigInt!
  # volume
  volume: BigInt!
}
